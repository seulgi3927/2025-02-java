package ch02.sec01;

public class PrimitiveType {
    public static void main(String[] args) {
        /*
        기본(원시) 타입 (Primitive Type) - 총 8개
        정수: byte(1), short(2), int(4), long(8)
        실수: float(4), double(8)
        문자: char(2)
        논리: boolean(1)

        모두 타입명이 소문자로 구성

        byte -128 ~ 127

        23 (10진수) > 10111 (2진수)
        23을 2로 나누면서 몫은 10, 나머지 1, 해서 1, 또 10을 2로 나누어서 몫은 5, 나머지는 0, 해서 0,
        또 5를 2로 나누어서 몫은 2, 나머지 1, 해서 1, 또 2를 2로 나누어서 몫은 1, 나머지는 0, 해서 10111 이 됨
        (밑에서 위로 카운트)

        10111 (2진수) > 23 으로 하는건 1의 자리부터 2의 0승 으로 시작함
        즉 1의 자리의 1은 2의 0승이라 1, 10의 자리는 2의 1승이여서 2, 100의 자리는 2의 2승이여서 4,
        천의 자리는 2의 3승이지만 0이여서 0, 10000의 자리는 2의 4승이여서 16, 이렇게해서 나온 수를 다 더하면 23이 됨.

        16 (10진수) > 10000 (2진수)
        1010101 (2진수) > 85 (10진수)

        23 (10진수) > 027 (8진수)

        55 (10진수) > 067(8진수)









         */
    }
}
